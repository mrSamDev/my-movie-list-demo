{"version":3,"sources":["hooks/useInterSectionHook.js","components/home/loader/index.js","components/home/movieCard/index.js","page/home/index.js"],"names":["useInterSectionHook","onObserve","useState","isIntersecting","setIsIntersecting","elementRef","useRef","observer","IntersectionObserver","entries","entry","useEffect","obs","current","elm","observe","disconnect","MovieLoader","className","imageUrl","x","MovieCard","movie","index","src","onError","e","target","onerror","alt","width","height","name","Home","dispatch","useDispatch","fetchMovieList","isLoading","useSelector","isMovieListLoading","movieList","getMovieList","searchKeyWord","getSearchKeyWord","observeElementRef","length","Boolean","filter","toLowerCase","includes","map","isMovieTheLastItemInTheList","ref"],"mappings":"iKAmCeA,EAjCa,SAACC,GAAe,IAAD,EACEC,oBAAS,GADX,mBACnCC,EADmC,KACnBC,EADmB,KAGpCC,EAAaC,mBACbC,EAAWD,iBAChB,IAAIE,sBAAqB,SAACC,GACzB,IAAMC,EAAQD,EAAQ,GAClBC,GACHN,EAAkBM,EAAMP,oBAsB3B,OAjBAQ,qBAAU,WACLR,GAAgBF,MAElB,CAACE,IAEJQ,qBAAU,WACT,IAAMC,EAAML,EAASM,QACfC,EAAMT,EAAWQ,QAKvB,OAJID,GAAOE,GACVF,EAAIG,QAAQD,GAGN,WACNF,EAAII,iBAIC,CAACX,I,OCxBMY,EARK,WACnB,OACC,qBAAKC,UAAU,oCAAf,SACC,qBAAKA,UAAU,uECHZC,EAAW,SAACC,GAAD,wBAAkBA,IA2BpBC,EAzBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC3B,OACC,sBAA8BL,UAAU,iBAAxC,UACC,qBAAKA,UAAU,yDAAf,SACC,qBACCM,IAAKL,EAASG,EAAM,iBACpBG,QAAS,SAACC,GACTA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOH,IAAML,EAAS,wCAEzBU,IAAKV,EAASG,EAAM,iBACpBJ,UAAU,kDACVY,MAAM,MACNC,OAAO,UAGT,qBAAKb,UAAU,gCAAf,SACC,8BACC,mBAAGA,UAAU,+BAAb,SAA6CI,EAAMU,aAhB5CV,EAAMU,KAAOT,IC+CVU,UA3CF,WACZ,IAAMC,EAAWC,cACjBxB,qBAAU,WACTuB,EAASE,iBACP,CAACF,IACJ,IAAMG,EAAYC,YAAYC,KACxBC,EAAYF,YAAYG,KACxBC,EAAgBJ,YAAYK,KAPhB,EAaU3C,GAJX,WAChBkC,EAASE,kBAGHQ,EAbW,oBAelB,GAAIP,IAAcG,EAAUK,OAAQ,OAAO,cAAC,EAAD,IAY3C,OACC,cAAC,WAAD,UACC,qBAAK3B,UAAU,oEAAf,UAXG4B,QAAQJ,GACJF,EAAUO,QAAO,SAACzB,GACxB,OAAOA,EAAMU,KAAKgB,cAAcC,SAASP,EAAcM,kBAIlDR,GAAa,IAMAU,KAAI,SAAU5B,EAAOC,GACtC,IAAM4B,EAA8B5B,IAAUiB,EAAUK,OAAS,EACjE,OACC,qBAAoCO,IAAKD,EAA8BP,EAAoB,KAA3F,SACC,cAAC,EAAD,CAAiBtB,QAAOC,WADfA,EAAQ,IAAMD,EAAMU","file":"static/js/4.a48b0f44.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst useInterSectionHook = (onObserve) => {\n\tconst [isIntersecting, setIsIntersecting] = useState(false);\n\n\tconst elementRef = useRef();\n\tconst observer = useRef(\n\t\tnew IntersectionObserver((entries) => {\n\t\t\tconst entry = entries[0];\n\t\t\tif (entry) {\n\t\t\t\tsetIsIntersecting(entry.isIntersecting);\n\t\t\t}\n\t\t})\n\t);\n\n\tuseEffect(() => {\n\t\tif (isIntersecting) onObserve();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isIntersecting]);\n\n\tuseEffect(() => {\n\t\tconst obs = observer.current;\n\t\tconst elm = elementRef.current;\n\t\tif (obs && elm) {\n\t\t\tobs.observe(elm);\n\t\t}\n\n\t\treturn () => {\n\t\t\tobs.disconnect();\n\t\t};\n\t});\n\n\treturn [elementRef];\n};\n\nexport default useInterSectionHook;\n","const MovieLoader = () => {\n\treturn (\n\t\t<div className=\"flex items-center justify-center \">\n\t\t\t<div className=\"w-16 h-16 border-b-2 border-white-900 rounded-full animate-spin\"></div>\n\t\t</div>\n\t);\n};\n\nexport default MovieLoader;\n","const imageUrl = (x) => `/assets/${x}`;\n\nconst MovieCard = ({ movie, index }) => {\n\treturn (\n\t\t<div key={movie.name + index} className=\"group relative\">\n\t\t\t<div className=\"w-full min-h-80 bg-gray-200 aspect-w-1 aspect-h-1 mt-5\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={imageUrl(movie[\"poster-image\"])}\n\t\t\t\t\tonError={(e) => {\n\t\t\t\t\t\te.target.onerror = null;\n\t\t\t\t\t\te.target.src = imageUrl(\"placeholder_for_missing_posters.png\");\n\t\t\t\t\t}}\n\t\t\t\t\talt={imageUrl(movie[\"poster-image\"])}\n\t\t\t\t\tclassName=\" object-center object-cover lg:w-full lg:h-full\"\n\t\t\t\t\twidth=\"100\"\n\t\t\t\t\theight=\"100\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-between truncate\">\n\t\t\t\t<div>\n\t\t\t\t\t<p className=\"text-sm text-gray-500 mt-0.5\">{movie.name}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MovieCard;\n//w-full h-full\n","import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovieList } from \"../../store/movies/actions\";\nimport { getMovieList, getSearchKeyWord, isMovieListLoading } from \"../../store/movies/selectors\";\nimport useInterSectionHook from \"../../hooks/useInterSectionHook\";\nimport MovieLoader from \"../../components/home/loader\";\nimport MovieCard from \"../../components/home/movieCard\";\n\nconst Home = () => {\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(fetchMovieList());\n\t}, [dispatch]);\n\tconst isLoading = useSelector(isMovieListLoading);\n\tconst movieList = useSelector(getMovieList);\n\tconst searchKeyWord = useSelector(getSearchKeyWord);\n\n\tconst callback = () => {\n\t\tdispatch(fetchMovieList());\n\t};\n\n\tconst [observeElementRef] = useInterSectionHook(callback);\n\n\tif (isLoading && !movieList.length) return <MovieLoader />;\n\n\tconst getDisplayList = () => {\n\t\tif (Boolean(searchKeyWord)) {\n\t\t\treturn movieList.filter((movie) => {\n\t\t\t\treturn movie.name.toLowerCase().includes(searchKeyWord.toLowerCase());\n\t\t\t});\n\t\t}\n\n\t\treturn movieList || [];\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"grid grid-cols-3 gap-y-2 gap-x-3 sm:grid-cols-3 overflow-auto p-2\">\n\t\t\t\t{getDisplayList().map(function (movie, index) {\n\t\t\t\t\tconst isMovieTheLastItemInTheList = index === movieList.length - 1;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index + \"_\" + movie.name} ref={isMovieTheLastItemInTheList ? observeElementRef : null}>\n\t\t\t\t\t\t\t<MovieCard {...{ movie, index }} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default Home;\n"],"sourceRoot":""}